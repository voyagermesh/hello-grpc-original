// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

/*
Package status is a generated protocol buffer package.

It is generated from these files:
	status.proto

It has these top-level messages:
	StatusRequest
	StatusResponse
	Version
*/
package status

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusRequest struct {
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StatusResponse struct {
	Version *Version `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StatusResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type Version struct {
	Name            string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version         string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	VersionStrategy string `protobuf:"bytes,3,opt,name=version_strategy,json=versionStrategy" json:"version_strategy,omitempty"`
	Os              string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	Arch            string `protobuf:"bytes,5,opt,name=arch" json:"arch,omitempty"`
	CommitHash      string `protobuf:"bytes,6,opt,name=commit_hash,json=commitHash" json:"commit_hash,omitempty"`
	GitBranch       string `protobuf:"bytes,7,opt,name=git_branch,json=gitBranch" json:"git_branch,omitempty"`
	GitTag          string `protobuf:"bytes,8,opt,name=git_tag,json=gitTag" json:"git_tag,omitempty"`
	CommitTimestamp string `protobuf:"bytes,9,opt,name=commit_timestamp,json=commitTimestamp" json:"commit_timestamp,omitempty"`
	BuildTimestamp  string `protobuf:"bytes,10,opt,name=build_timestamp,json=buildTimestamp" json:"build_timestamp,omitempty"`
	BuildHost       string `protobuf:"bytes,11,opt,name=build_host,json=buildHost" json:"build_host,omitempty"`
	BuildHostOs     string `protobuf:"bytes,12,opt,name=build_host_os,json=buildHostOs" json:"build_host_os,omitempty"`
	BuildHostArch   string `protobuf:"bytes,13,opt,name=build_host_arch,json=buildHostArch" json:"build_host_arch,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Version) GetVersionStrategy() string {
	if m != nil {
		return m.VersionStrategy
	}
	return ""
}

func (m *Version) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Version) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *Version) GetCommitHash() string {
	if m != nil {
		return m.CommitHash
	}
	return ""
}

func (m *Version) GetGitBranch() string {
	if m != nil {
		return m.GitBranch
	}
	return ""
}

func (m *Version) GetGitTag() string {
	if m != nil {
		return m.GitTag
	}
	return ""
}

func (m *Version) GetCommitTimestamp() string {
	if m != nil {
		return m.CommitTimestamp
	}
	return ""
}

func (m *Version) GetBuildTimestamp() string {
	if m != nil {
		return m.BuildTimestamp
	}
	return ""
}

func (m *Version) GetBuildHost() string {
	if m != nil {
		return m.BuildHost
	}
	return ""
}

func (m *Version) GetBuildHostOs() string {
	if m != nil {
		return m.BuildHostOs
	}
	return ""
}

func (m *Version) GetBuildHostArch() string {
	if m != nil {
		return m.BuildHostArch
	}
	return ""
}

func init() {
	proto.RegisterType((*StatusRequest)(nil), "github.com.appscode.hellogrpc.apis.status.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "github.com.appscode.hellogrpc.apis.status.StatusResponse")
	proto.RegisterType((*Version)(nil), "github.com.appscode.hellogrpc.apis.status.Version")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StatusService service

type StatusServiceClient interface {
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
}

type statusServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatusServiceClient(cc *grpc.ClientConn) StatusServiceClient {
	return &statusServiceClient{cc}
}

func (c *statusServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc.Invoke(ctx, "/github.com.appscode.hellogrpc.apis.status.StatusService/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatusService service

type StatusServiceServer interface {
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
}

func RegisterStatusServiceServer(s *grpc.Server, srv StatusServiceServer) {
	s.RegisterService(&_StatusService_serviceDesc, srv)
}

func _StatusService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.appscode.hellogrpc.apis.status.StatusService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.appscode.hellogrpc.apis.status.StatusService",
	HandlerType: (*StatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _StatusService_Status_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "status.proto",
}

func init() { proto.RegisterFile("status.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xbf, 0x6e, 0x13, 0x41,
	0x10, 0xc6, 0x65, 0x27, 0x9c, 0xe3, 0x71, 0x6c, 0xc3, 0x52, 0xb0, 0x58, 0x04, 0xd0, 0x15, 0x40,
	0x9a, 0xb3, 0x64, 0x1a, 0x28, 0x49, 0x95, 0x02, 0x09, 0xc9, 0x8e, 0x28, 0x28, 0xb0, 0xd6, 0x97,
	0xd5, 0xee, 0x22, 0xdf, 0xcd, 0x71, 0x33, 0x8e, 0x44, 0xcb, 0x2b, 0xd0, 0x50, 0xf1, 0x00, 0xbc,
	0x0e, 0xaf, 0xc0, 0x83, 0xa0, 0x9b, 0xbd, 0x8b, 0x41, 0xa2, 0x80, 0x74, 0xb3, 0xbf, 0xef, 0x9b,
	0x3f, 0xba, 0xfb, 0xe0, 0x98, 0xd8, 0xf0, 0x8e, 0xb2, 0xaa, 0x46, 0x46, 0x75, 0xea, 0x02, 0xfb,
	0xdd, 0x26, 0xcb, 0xb1, 0xc8, 0x4c, 0x55, 0x51, 0x8e, 0x97, 0x36, 0xf3, 0x76, 0xbb, 0x45, 0x57,
	0x57, 0x79, 0x66, 0xaa, 0x40, 0x59, 0x6c, 0x98, 0x3d, 0x70, 0x88, 0x6e, 0x6b, 0xe7, 0xa6, 0x0a,
	0x73, 0x53, 0x96, 0xc8, 0x86, 0x03, 0x96, 0xed, 0xa0, 0xd9, 0xc3, 0xae, 0xfb, 0xef, 0x7a, 0x3a,
	0x85, 0xf1, 0x4a, 0xe6, 0x2c, 0xed, 0xc7, 0x9d, 0x25, 0x4e, 0xdf, 0xc3, 0xa4, 0x03, 0x54, 0x61,
	0x49, 0x56, 0xbd, 0x86, 0xc1, 0x95, 0xad, 0x29, 0x60, 0xa9, 0x7b, 0x8f, 0x7b, 0xcf, 0x46, 0x8b,
	0x45, 0xf6, 0xcf, 0xd7, 0x65, 0x6f, 0x63, 0xe7, 0xb2, 0x1b, 0x91, 0x7e, 0x3b, 0x80, 0x41, 0x0b,
	0x95, 0x82, 0xc3, 0xd2, 0x14, 0x56, 0xc6, 0x0e, 0x97, 0x52, 0x2b, 0xbd, 0xdf, 0xd6, 0x17, 0xdc,
	0x3d, 0xd5, 0x29, 0xdc, 0x6e, 0xcb, 0x35, 0x71, 0x6d, 0xd8, 0xba, 0x4f, 0xfa, 0x40, 0x2c, 0xd3,
	0x96, 0xaf, 0x5a, 0xac, 0x26, 0xd0, 0x47, 0xd2, 0x87, 0x22, 0xf6, 0x91, 0x9a, 0x45, 0xa6, 0xce,
	0xbd, 0xbe, 0x15, 0x17, 0x35, 0xb5, 0x7a, 0x04, 0xa3, 0x1c, 0x8b, 0x22, 0xf0, 0xda, 0x1b, 0xf2,
	0x3a, 0x11, 0x09, 0x22, 0x3a, 0x37, 0xe4, 0xd5, 0x09, 0x80, 0x0b, 0xbc, 0xde, 0xd4, 0xa6, 0xcc,
	0xbd, 0x1e, 0x88, 0x3e, 0x74, 0x81, 0xcf, 0x04, 0xa8, 0x7b, 0x30, 0x68, 0x64, 0x36, 0x4e, 0x1f,
	0x89, 0x96, 0xb8, 0xc0, 0x17, 0xc6, 0x35, 0x77, 0xb6, 0x83, 0x39, 0x14, 0x96, 0xd8, 0x14, 0x95,
	0x1e, 0xc6, 0x3b, 0x23, 0xbf, 0xe8, 0xb0, 0x7a, 0x0a, 0xd3, 0xcd, 0x2e, 0x6c, 0x2f, 0x7f, 0x73,
	0x82, 0x38, 0x27, 0x82, 0xf7, 0xc6, 0x13, 0x80, 0x68, 0xf4, 0x48, 0xac, 0x47, 0xf1, 0x16, 0x21,
	0xe7, 0x48, 0xac, 0x52, 0x18, 0xef, 0xe5, 0x35, 0x92, 0x3e, 0x16, 0xc7, 0xe8, 0xda, 0xf1, 0x86,
	0xd4, 0x93, 0x6e, 0x97, 0x78, 0xe4, 0x73, 0x8c, 0xc5, 0x35, 0xbe, 0x76, 0xbd, 0xaa, 0x73, 0xbf,
	0xf8, 0xde, 0xeb, 0x22, 0xb1, 0xb2, 0xf5, 0x55, 0xc8, 0xad, 0xfa, 0xda, 0x83, 0x24, 0x12, 0xf5,
	0xe2, 0x3f, 0x7e, 0xfd, 0x1f, 0xb9, 0x9a, 0xbd, 0xbc, 0x41, 0x67, 0x0c, 0x60, 0x7a, 0xff, 0xf3,
	0x8f, 0x9f, 0x5f, 0xfa, 0x77, 0xd5, 0x9d, 0x26, 0xc3, 0x34, 0x8f, 0xa6, 0xf9, 0x07, 0xc2, 0xf2,
	0xec, 0xe8, 0x5d, 0x12, 0x9f, 0x9b, 0x44, 0xf2, 0xfc, 0xfc, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x81, 0x72, 0x38, 0xe1, 0x48, 0x03, 0x00, 0x00,
}
